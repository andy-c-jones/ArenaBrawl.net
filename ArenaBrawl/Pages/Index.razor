@page "/"
@using ArenaBrawl.Services
@using ArenaBrawl.Components

@inject MatchmakingService Matchmaking

<h1 class="text-center title">Arena Brawl</h1>

<div class="text-center">
    @switch (_state)
    {
        case GameState.OutsideOfGame:
            <div>
                <input class="input-txt" type="text" placeholder="PlayerName#1234" @bind="_id"/>
                       <button class="btn btn-primary" @onclick="QueueForMatch">Find a game</button>
                               </div>
            break;
        case GameState.FindingPlayer:
            <div class="">Finding player please wait...</div>
            break;
        case GameState.PlayerFound:
            <div class="">Player found: @_opponentsName</div>
            break;
    }
    <OnlinePlayerCount></OnlinePlayerCount>
</div>


@code {

    enum GameState
    {
        OutsideOfGame,
        FindingPlayer,
        PlayerFound
    }

    private string _id;
    private GameState _state = GameState.OutsideOfGame;
    private string _opponentsName = "";

    async void QueueForMatch()
    {
        await Matchmaking.AddToQueue(_id);
        _state = GameState.FindingPlayer;
        PollForUpdates();
    }

    private async void PollForUpdates()
    {
        while (_state == GameState.FindingPlayer)
        {
            try
            {
                var (matchFound, opponentsName) = await Matchmaking.AttemptToFindMatch(_id);
                if (matchFound)
                {
                    _state = GameState.PlayerFound;
                    _opponentsName = opponentsName;
                }
                else
                {
                    await Task.Delay(2000);
                }
            }
            catch (Exception e)
            {
                Console.Error.WriteLine(e);
            }
        }
    }

}